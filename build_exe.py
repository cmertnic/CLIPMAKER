import os
import subprocess
import sys
import time
import urllib.request
import zipfile
import tempfile
import shutil
from pathlib import Path

def download_with_progress(url, filename):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    def progress_hook(block_num, block_size, total_size):
        downloaded = block_num * block_size
        percent = min(100, int(downloaded * 100 / total_size))
        bar_length = 30
        filled_length = int(bar_length * percent // 100)
        bar = '‚ñà' * filled_length + '‚ñë' * (bar_length - filled_length)
        sys.stdout.write(f'\rüì• {filename}: [{bar}] {percent}%')
        sys.stdout.flush()
    
    try:
        urllib.request.urlretrieve(url, filename, progress_hook)
        sys.stdout.write('\n')
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {filename}: {e}")
        return False

def install_ffmpeg():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ FFmpeg –≤ –ø–∞–ø–∫—É dist"""
    ffmpeg_dir = Path('dist/ffmpeg')
    ffmpeg_exe = ffmpeg_dir / 'bin' / 'ffmpeg.exe'
    
    if ffmpeg_exe.exists():
        print("‚úÖ FFmpeg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    
    print("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º FFmpeg...")
    
    # URL –¥–ª—è FFmpeg (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è Windows)
    ffmpeg_url = "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip"
    
    try:
        with tempfile.NamedTemporaryFile(delete=False, suffix='.zip') as tmp_file:
            print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º FFmpeg...")
            if not download_with_progress(ffmpeg_url, tmp_file.name):
                return False
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
            temp_extract = Path('ffmpeg_temp')
            if temp_extract.exists():
                shutil.rmtree(temp_extract)
            
            print("üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º FFmpeg...")
            with zipfile.ZipFile(tmp_file.name, 'r') as zip_ref:
                zip_ref.extractall(temp_extract)
            
            # –ù–∞—Ö–æ–¥–∏–º –ø–∞–ø–∫—É —Å –±–∏–Ω–∞—Ä–Ω–∏–∫–∞–º–∏
            bin_dir = None
            for item in temp_extract.rglob('ffmpeg.exe'):
                bin_dir = item.parent
                break
            
            if bin_dir and bin_dir.exists():
                # –ö–æ–ø–∏—Ä—É–µ–º –≤ —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É
                ffmpeg_dir.mkdir(parents=True, exist_ok=True)
                shutil.copytree(bin_dir, ffmpeg_dir / 'bin')
                print("‚úÖ FFmpeg —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã FFmpeg")
                return False
            
            # –û—á–∏—Å—Ç–∫–∞
            shutil.rmtree(temp_extract)
            os.unlink(tmp_file.name)
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FFmpeg: {e}")
        return False

def install_whisper_model():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ Whisper"""
    models_dir = Path('dist/models')
    models_dir.mkdir(exist_ok=True)
    
    # –ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å Whisper
    model_name = "base"
    model_url = f"https://openaipublic.azureedge.net/main/whisper/models/81f7c96c852ee8fc832187b0132e569d6c3065a3252ed18e56effd0b6a73e524/{model_name}.pt"
    model_path = models_dir / f"{model_name}.pt"
    
    if model_path.exists():
        print(f"‚úÖ –ú–æ–¥–µ–ª—å Whisper {model_name} —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        return True
    
    print(f"üîß –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å Whisper ({model_name})...")
    try:
        if download_with_progress(model_url, model_path):
            print(f"‚úÖ –ú–æ–¥–µ–ª—å Whisper {model_name} –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            return True
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å Whisper")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
        return False

def check_python_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    dependencies = [
        'torch',
        'torchvision', 
        'torchaudio',
        'openai-whisper',
        'moviepy',
        'opencv-python',
        'pydub',
        'numpy',
        'Pillow',
        'tqdm'
    ]
    
    for dep in dependencies:
        try:
            __import__(dep.replace('-', '_'))
            print(f"  ‚úÖ {dep}")
        except ImportError:
            print(f"  üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {dep}...")
            try:
                subprocess.check_call([sys.executable, '-m', 'pip', 'install', dep])
                print(f"  ‚úÖ {dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except subprocess.CalledProcessError:
                print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {dep}")

def create_assets_folder():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–∫–∏ assets"""
    assets_dir = Path('assets')
    assets_dir.mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
    subfolders = ['fonts', 'images', 'frames', 'icons']
    for folder in subfolders:
        (assets_dir / folder).mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    icon_path = assets_dir / 'icons' / 'icon.ico'
    if not icon_path.exists():
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –∏–∫–æ–Ω–∫–∏
        icon_help = assets_dir / 'icons' / 'README.txt'
        icon_help.write_text("""–î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ñ–∞–π–ª—ã –∏–∫–æ–Ω–æ–∫:
- icon.ico - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (32x32, 48x48, 256x256)
- icon.png - –∏–∫–æ–Ω–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:
‚Ä¢ https://convertio.co/ru/png-ico/ - –æ–Ω–ª–∞–π–Ω –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
‚Ä¢ IcoFX - –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–æ–∫
‚Ä¢ GIMP + –ø–ª–∞–≥–∏–Ω –¥–ª—è ICO
""")
        print("‚ö†Ô∏è –ò–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º README –¥–ª—è —à—Ä–∏—Ñ—Ç–æ–≤
    fonts_readme = assets_dir / 'fonts' / 'README.txt'
    fonts_readme.write_text("""–î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ —à—Ä–∏—Ñ—Ç—ã –¥–ª—è —Å—É–±—Ç–∏—Ç—Ä–æ–≤:
- .ttf –∏–ª–∏ .otf —Ñ–∞–π–ª—ã
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —à—Ä–∏—Ñ—Ç—ã: Arial, Times New Roman, Roboto
- –®—Ä–∏—Ñ—Ç—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —ç–º–æ–¥–∑–∏: Segoe UI Emoji, Noto Color Emoji
""")
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–∫–∏ assets")

def build_exe():
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–±–æ—Ä–∫–∏ AI Video Clipper...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        'main.py',
        'config.py', 
        'utils.py',
        'models.py',
        'frame_processor.py',
        'subtitle_engine.py',
        'video_processor.py'
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–¥–Ω–æ–π –ø–∞–ø–∫–µ")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É assets –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not Path('assets').exists():
        create_assets_folder()
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...")
    for folder in ['dist', 'build', '__pycache__']:
        if os.path.exists(folder):
            try:
                # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
                time.sleep(1)
                shutil.rmtree(folder)
                print(f"  ‚úÖ –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞ {folder}")
            except Exception as e:
                print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å {folder}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("\nüì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    check_python_dependencies()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è PyInstaller —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    cmd = [
        sys.executable, '-m', 'PyInstaller',
        'main.py',
        '--name=AI_Video_Clipper',
        '--onefile',
        '--windowed',
        '--add-data=assets;assets',
        '--add-data=assets/*;assets/',
        '--add-data=config.py;.',
        '--add-data=utils.py;.', 
        '--add-data=models.py;.',
        '--add-data=frame_processor.py;.',
        '--add-data=subtitle_engine.py;.',
        '--add-data=video_processor.py;.',
        # Whisper –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        '--hidden-import=whisper',
        '--hidden-import=whisper.audio',
        '--hidden-import=whisper.model',
        '--hidden-import=whisper.transcribe',
        '--hidden-import=whisper.decoding',
        '--hidden-import=whisper.timing',
        '--hidden-import=whisper.normalizers',
        '--hidden-import=whisper.tokenizer',
        # MoviePy –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        '--hidden-import=moviepy',
        '--hidden-import=moviepy.video.io.VideoFileClip',
        '--hidden-import=moviepy.video.VideoClip',
        '--hidden-import=moviepy.video.fx.all',
        '--hidden-import=moviepy.audio.io.AudioFileClip',
        '--hidden-import=moviepy.audio.AudioClip',
        '--hidden-import=moviepy.audio.fx.all',
        # –î—Ä—É–≥–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        '--hidden-import=pydub',
        '--hidden-import=pydub.utils',
        '--hidden-import=pydub.silence',
        '--hidden-import=pydub.effects',
        '--hidden-import=cv2',
        '--hidden-import=cv2.data',
        '--hidden-import=numpy',
        '--hidden-import=PIL',
        '--hidden-import=PIL.Image',
        '--hidden-import=PIL.ImageDraw',
        '--hidden-import=PIL.ImageFont',
        '--hidden-import=PIL.ImageOps',
        '--hidden-import=tkinter',
        '--hidden-import=tkinter.filedialog',
        '--hidden-import=tkinter.messagebox',
        '--hidden-import=torch',
        '--hidden-import=torchvision',
        # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        '--collect-all=moviepy',
        '--collect-all=pydub', 
        '--collect-all=whisper',
        '--collect-data=whisper',
        '--collect-data=torch',
        '--collect-data=torchvision',
        '--clean',
        '--noconfirm'
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    icon_path = 'assets/icons/icon.ico'
    if os.path.exists(icon_path):
        cmd.append(f'--icon={icon_path}')
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∫–æ–Ω–∫–∞ –∏–∑ assets")
    else:
        print("‚ö†Ô∏è –°–±–æ—Ä–∫–∞ –±–µ–∑ –∏–∫–æ–Ω–∫–∏")
    
    print(f"\nüî® –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller...")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd[:5])} ... [—Å–∫—Ä—ã—Ç–æ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏]")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –°–±–æ—Ä–∫–∞ PyInstaller –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        print("\nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        install_ffmpeg()
        install_whisper_model()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        exe_path = Path('dist') / 'AI_Video_Clipper.exe'
        if exe_path.exists():
            size_mb = exe_path.stat().st_size / (1024 * 1024)
            print(f"\nüéâ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {exe_path}")
            print(f"üìÅ –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            create_instruction_file()
            
            return True
        else:
            print("‚ùå EXE —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ (–∫–æ–¥ {e.returncode}):")
        if e.stdout:
            # –í—ã–≤–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
            lines = e.stdout.split('\n')
            print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:")
            for line in lines[-10:]:
                if line.strip():
                    print(f"  {line}")
        if e.stderr:
            print(f"STDERR: {e.stderr[-500:]}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def create_instruction_file():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"""
    instruction_content = """üéØ AI Video Clipper - –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è

üìÅ –°–û–î–ï–†–ñ–ò–ú–û–ï –ü–ê–ü–ö–ò:
‚Ä¢ AI_Video_Clipper.exe - –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚Ä¢ ffmpeg/ - –¥–≤–∏–∂–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ (–∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞)
‚Ä¢ models/ - –º–æ–¥–µ–ª–∏ AI –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
‚Ä¢ –ò–ù–°–¢–†–£–ö–¶–ò–Ø.txt - —ç—Ç–æ—Ç —Ñ–∞–π–ª

üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢:

1. –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
   –î–≤–∞–∂–¥—ã —â–µ–ª–∫–Ω–∏—Ç–µ –Ω–∞ AI_Video_Clipper.exe

2. –í–´–ë–û–† –í–ò–î–ï–û
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–í—ã–±—Ä–∞—Ç—å –≤–∏–¥–µ–æ"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª (MP4, AVI, MOV, MKV)
   ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏

3. –ù–ê–°–¢–†–û–ô–ö–ò
   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–ø–æ–≤: 1-10
   ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 15-60 —Å–µ–∫—É–Ω–¥
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑: –≤—Å–µ–π –∑–∞–ø–∏—Å–∏ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–∞
   ‚Ä¢ –§–æ—Ä–º–∞—Ç: Shorts (9:16) –∏–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª

4. –û–ë–†–ê–ë–û–¢–ö–ê
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É"
   ‚Ä¢ –ñ–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–¥–µ–æ)
   ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ "output"

üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–¢–°–Ø:

‚úì FFmpeg - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ
‚úì Whisper AI - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏  
‚úì –í—Å–µ Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
‚úì –ú–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è

‚ö†Ô∏è –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú:

1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å (–º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å)
   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ .NET Framework 4.5+

2. –û—à–∏–±–∫–∏ —Å –≤–∏–¥–µ–æ
   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç (MP4 –ª—É—á—à–µ –≤—Å–µ–≥–æ)
   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –∑–≤—É–∫–æ–≤–∞—è –¥–æ—Ä–æ–∂–∫–∞

3. –î–æ–ª–≥–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
   ‚Ä¢ –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –¥–æ–ª—å—à–µ
   ‚Ä¢ –ó–∞–∫—Ä–æ–π—Ç–µ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
   ‚Ä¢ –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ

üé¨ –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:

‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∏ —Å—É–±—Ç–∏—Ç—Ä—ã
‚Ä¢ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Shorts/TikTok
‚Ä¢ –°—Ç–∏–ª—å–Ω—ã–µ —Ä–∞–º–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ
‚Ä¢ –û–±—Ä–µ–∑–∫–∞ –∏ –Ω–∞—Ä–µ–∑–∫–∞ –∫–ª–∏–ø–æ–≤
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MP4 —Å —Ö–æ—Ä–æ—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º

üìû –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê:

–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞—é—Ç—Å—è:
1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ (–Ω—É–∂–Ω–æ 2+ GB —Å–≤–æ–±–æ–¥–Ω–æ)
3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∞
4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –æ–¥–Ω–æ–π –ø–∞–ø–∫–µ

üí° –°–û–í–ï–¢–´:

‚Ä¢ –î–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ MP4 —Å H.264
‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ: 5-30 –º–∏–Ω—É—Ç
‚Ä¢ –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–º–µ–Ω—Ç–æ–≤ –≤–∞–∂–µ–Ω —á–µ—Ç–∫–∏–π –∑–≤—É–∫
‚Ä¢ –†–∞–º–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥ –∫–ª–∏–ø–∞–º

üéâ –£–¥–∞—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—Ä—É—Ç—ã—Ö –≤–∏–¥–µ–æ!"""

    instruction_path = Path('dist') / '–ò–ù–°–¢–†–£–ö–¶–ò–Ø.txt'
    try:
        instruction_path.write_text(instruction_content, encoding='utf-8')
        print(f"üìÑ –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction_path}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: {e}")

if __name__ == "__main__":
    print("üõ†Ô∏è  –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–±–æ—Ä—â–∏–∫ AI Video Clipper")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!\n")
    
    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    time.sleep(2)
    
    success = build_exe()
    
    if success:
        print("\n" + "="*50)
        print("üéä –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("="*50)
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("  ‚úÖ –°–æ–±—Ä–∞–Ω EXE —Ñ–∞–π–ª —Å PyInstaller")
        print("  ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω FFmpeg –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ")
        print("  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –º–æ–¥–µ–ª–∏ AI –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏")
        print("  ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        
        print("\nüöÄ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("  1. –ó–∞–ø—É—Å—Ç–∏—Ç—å dist/AI_Video_Clipper.exe")
        print("  2. –°–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –ò–ù–°–¢–†–£–ö–¶–ò–Ø.txt")
        print("  3. –°–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä—É—Ç—ã–µ –≤–∏–¥–µ–æ –∫–ª–∏–ø—ã!")
        
    else:
        print("\nüí° –°–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –æ—à–∏–±–æ–∫:")
        print("  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Python 3.8+ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("  ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: pip install --upgrade pyinstaller")
        print("  ‚Ä¢ –ó–∞–∫—Ä–æ–π—Ç–µ –≤—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ –ø–∞–ø–∫—É dist")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")